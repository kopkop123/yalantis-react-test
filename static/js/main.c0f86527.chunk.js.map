{"version":3,"sources":["config/api.js","components/Employees/index.js","components/Birthday/index.js","App.js","index.js"],"names":["months","currentMonth","Date","getMonth","sortedMonths","slice","alphabet","Employees","data","checkedHandler","createSectionItem","letterSection","length","map","item","className","checked","lastName","firstName","type","name","id","onChange","letter","filter","Birthday","checkedData","parseDate","date","parsedDate","parse","newDate","day","getDate","month","year","getFullYear","createBirthdayItem","monthSection","index","dob","curVal","App","useState","setData","setCheckedData","useEffect","fetch","then","json","sort","a","b","nameA","toLowerCase","nameB","parsedStorageData","JSON","localStorage","getItem","newData","dataItem","find","parsedStorageDataItem","dates","checkedArray","setItem","stringify","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c0f86527.chunk.js","sourcesContent":["export const API_URL =\r\n  \"https://yalantis-react-school-api.yalantis.com/api/task0/users\";\r\n\r\nexport const months = [\r\n  \"January\",\r\n  \"February\",\r\n  \"March\",\r\n  \"April\",\r\n  \"May\",\r\n  \"June\",\r\n  \"July\",\r\n  \"August\",\r\n  \"September\",\r\n  \"October\",\r\n  \"November\",\r\n  \"December\",\r\n];\r\n\r\nconst currentMonth = new Date().getMonth();\r\nexport const sortedMonths = [\r\n  ...months.slice(currentMonth),\r\n  ...months.slice(0, currentMonth),\r\n];\r\n\r\nexport const alphabet = [\r\n  \"A\",\r\n  \"B\",\r\n  \"C\",\r\n  \"D\",\r\n  \"E\",\r\n  \"F\",\r\n  \"G\",\r\n  \"H\",\r\n  \"I\",\r\n  \"J\",\r\n  \"K\",\r\n  \"L\",\r\n  \"M\",\r\n  \"N\",\r\n  \"O\",\r\n  \"P\",\r\n  \"Q\",\r\n  \"R\",\r\n  \"S\",\r\n  \"T\",\r\n  \"U\",\r\n  \"V\",\r\n  \"W\",\r\n  \"X\",\r\n  \"Y\",\r\n  \"Z\",\r\n];\r\n","import React from \"react\";\r\n\r\nimport { alphabet } from \"../../config/api\";\r\n\r\nconst Employees = ({ data, checkedHandler }) => {\r\n  const createSectionItem = (letterSection) => {\r\n    return letterSection.length !== 0 ? (\r\n      letterSection.map((item) => {\r\n        return (\r\n          <div className=\"employees__item\" key={item.id}>\r\n            <div className={item.checked ? \"employees__name\" : null}>\r\n              {item.lastName} {item.firstName}\r\n            </div>\r\n\r\n            <label>\r\n              <input\r\n                type=\"radio\"\r\n                name={item.id}\r\n                checked={!item.checked ? true : false}\r\n                onChange={() => checkedHandler(item)}\r\n              />{\" \"}\r\n              not active\r\n            </label>\r\n            <label>\r\n              <input\r\n                type=\"radio\"\r\n                name={item.id}\r\n                checked={item.checked ? true : false}\r\n                onChange={() => checkedHandler(item)}\r\n              />{\" \"}\r\n              active\r\n            </label>\r\n          </div>\r\n        );\r\n      })\r\n    ) : (\r\n      <div className=\"employees__item employees__item_empty\">----</div>\r\n    );\r\n  };\r\n\r\n  const createSections = () => {\r\n    return alphabet.map((letter) => {\r\n      const letterSection = data.filter((item) => item.lastName[0] === letter);\r\n      return (\r\n        <div className=\"employees__section\" key={letter}>\r\n          <div className=\"employees__letter\">{letter}</div>\r\n          <div className=\"employees__items\">\r\n            {createSectionItem(letterSection)}\r\n          </div>\r\n        </div>\r\n      );\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"employees\">\r\n      <div className=\"employees__header\">Employees</div>\r\n      <div className=\"employees__sections\">{createSections()}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Employees;\r\n","import React from \"react\";\r\nimport { months, sortedMonths } from \"../../config/api\";\r\n\r\nconst Birthday = ({ checkedData }) => {\r\n  const parseDate = (date) => {\r\n    const parsedDate = Date.parse(date),\r\n      newDate = new Date(parsedDate),\r\n      day = newDate.getDate(),\r\n      month = newDate.getMonth(),\r\n      year = newDate.getFullYear();\r\n\r\n    return `${day} ${months[month]}, ${year} year`;\r\n  };\r\n\r\n  const createBirthdayItem = (monthSection, index) => {\r\n    return monthSection.length !== 0 ? (\r\n      <div className=\"birthday__section\">\r\n        <div className=\"birthday__month\">{sortedMonths[index]}</div>\r\n        <ul className=\"birthday__items\">\r\n          {monthSection.map((item) => {\r\n            return (\r\n              <div className=\"birthday__item\" key={item.id}>\r\n                {item.lastName} {item.firstName} - {parseDate(item.dob)}\r\n              </div>\r\n            );\r\n          })}\r\n        </ul>\r\n      </div>\r\n    ) : null;\r\n  };\r\n\r\n  const createBirthdaySections = () => {\r\n    return checkedData.length === 0 ? (\r\n      <div>Employees List is empty</div>\r\n    ) : (\r\n      sortedMonths.map((curVal, index) => {\r\n        const monthSection = checkedData.filter(\r\n          (date) => months[new Date(Date.parse(date.dob)).getMonth()] === curVal\r\n        );\r\n\r\n        return (\r\n          <div key={curVal}>{createBirthdayItem(monthSection, index)}</div>\r\n        );\r\n      })\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className=\"birthday\">\r\n      <div className=\"birthday__header\">Employees birthday</div>\r\n      <div className=\"birthday__sections\">{createBirthdaySections()}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Birthday;\r\n","import React, { useState, useEffect } from \"react\";\nimport Employees from \"./components/Employees\";\nimport Birthday from \"./components/Birthday\";\n\nimport \"./App.css\";\n\nconst App = () => {\n  const [data, setData] = useState([]);\n  const [checkedData, setCheckedData] = useState([]);\n\n  useEffect(() => {\n    fetch(\"https://yalantis-react-school-api.yalantis.com/api/task0/users\")\n      .then((data) => data.json())\n      .then((data) => {\n        data.sort((a, b) => {\n          const nameA = a.lastName.toLowerCase(),\n            nameB = b.lastName.toLowerCase();\n          if (nameA < nameB) {\n            return -1;\n          } else if (nameA > nameB) {\n            return 1;\n          } else {\n            return 0;\n          }\n        });\n\n        const parsedStorageData = JSON.parse(\n          localStorage.getItem(\"checkedData\")\n        );\n\n        if (parsedStorageData) {\n          setCheckedData(parsedStorageData);\n\n          const newData = data.map((dataItem) => {\n            const indexData = parsedStorageData.find(\n              (parsedStorageDataItem) =>\n                parsedStorageDataItem.id === dataItem.id\n            );\n            if (indexData) {\n              return { ...dataItem, checked: true };\n            } else {\n              return { ...dataItem };\n            }\n          });\n          setData(newData);\n        } else {\n          setData(data);\n        }\n      });\n  }, []);\n\n  const checkedArray = (newData) => {\n    return newData\n      .filter((item) => item.checked === true)\n      .sort((a, b) => {\n        const nameA = new Date(Date.parse(a.dob)).getMonth(),\n          nameB = new Date(Date.parse(b.dob)).getMonth();\n        if (nameA < nameB) {\n          return -1;\n        } else if (nameA > nameB) {\n          return 1;\n        } else {\n          return 0;\n        }\n      });\n  };\n\n  const checkedHandler = (item) => {\n    const newData = data.map((dataItem) => {\n      if (dataItem.id === item.id) {\n        return { ...dataItem, checked: !dataItem.checked };\n      } else if (dataItem.checked) {\n        return { ...dataItem };\n      } else {\n        return { ...dataItem, checked: false };\n      }\n    });\n    setData(newData);\n\n    const dates = checkedArray(newData);\n    setCheckedData(dates);\n\n    localStorage.setItem(\"checkedData\", JSON.stringify(dates));\n  };\n\n  return (\n    <div className=\"App\">\n      <Employees data={data} checkedHandler={checkedHandler} />\n      <Birthday checkedData={checkedData} />\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}